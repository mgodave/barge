/**
 * Copyright 2013 David Rusek <dave dot rusek at gmail dot com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option java_package = "org.robotninjas.barge.proto";
option java_generic_services = true;
option java_outer_classname = "RaftProto";

import "entry.proto";

message RequestVote {
	required int64 term = 1;
	required string candidate_id = 2;
	required int64 last_log_index = 3;
	required int64 last_log_term = 4;
}

message RequestVoteResponse {
	required int64 term = 1;
	required bool vote_granted = 2;
}

message AppendEntries {
	required int64 term = 1;
	required string leader_id = 2;
	required int64 prev_log_index = 3;
	required int64 prev_log_term = 4;
	required int64 commit_index = 5;
	repeated Entry entries = 6;
}

message AppendEntriesResponse {
	required int64 term = 1;
	required bool success = 2;
}

message InstallSnapshot {
	required int64 term = 1;
	required int64 last_included_index = 2;
	required int64 last_included_term = 3;
	required bytes snapshot_data = 4;
}

message InstallSnapshotResponse {
	required int64 term = 1;
	required bool success = 2;
}

service RaftService {
	rpc requestVote (RequestVote) returns (RequestVoteResponse);
	rpc appendEntries (AppendEntries) returns (AppendEntriesResponse);
	rpc installSnapshot (InstallSnapshot) returns (InstallSnapshotResponse);
}
